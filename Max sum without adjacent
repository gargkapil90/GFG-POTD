class Solution{
public:	
    int maxSum(int *arr, int n, int i, int *dp){
        if(i >= n){
            return 0;
        }
        if(dp[i] != -1)
            return dp[i];
        int include = arr[i] + maxSum(arr, n, i+2, dp);
        int exclude = maxSum(arr, n, i+1, dp);
        dp[i] = max(include, exclude);
        return dp[i];
    }
	// calculate the maximum sum with out adjacent
	int findMaxSum(int *arr, int n) {
	    int dp[n+1];
	    for(int i = 0; i <= n; i++){
	        dp[i] = -1;
	    }
	    int sum = maxSum(arr, n, 0, dp);
	    return sum;
	}
};
