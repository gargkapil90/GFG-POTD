class Solution{
public:
    Node* n;
    long long int ans = 0;
    bool find(Node* root, int target){
        if(root == NULL) return false;
        if(root->data > target){
            return find(root->left, target);
        }else if(root->data < target){
            return find(root->right, target);
        }else{
            n = root;
            return true;
        }
    }
    void solve(Node* root, int d){
        if(root == NULL)
            return;
        if(d == 0){
            ans += root->data;
        }
        solve(root->left, d -1);
        solve(root->right, d+1);
    }
    long long int verticallyDownBST(Node *root,int target){
        bool present = find(root, target);
        if(present == false)
            return -1;
        solve(n, 0);
        return ans - n->data;
    }
};
